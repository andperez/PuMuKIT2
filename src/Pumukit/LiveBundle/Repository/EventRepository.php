<?php

namespace Pumukit\LiveBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;

/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends DocumentRepository
{
    /**
     * Find future and not finished
     *
     * @param integer $limit
     * @return Cursor
     */
    public function findFutureAndNotFinished($limit=null)
    {
        // First: look if there is a current live event broadcasting
        // for setting datetime minus duration
        $currentDatetime = new \DateTime("now");
        $startDay = new \DateTime("now");
        $finishDay = new \DateTime("now");
        $startDay->setTime(0, 0, 0);
        $finishDay->setTime(23, 59, 59);

        $currentDayEvents = $this->createQueryBuilder("e")
            ->field("display")->equals(true)
            ->field('date')->gte($startDay)
            ->field('date')->lte($finishDay)
            ->sort("date", 1)
            ->getQuery()->execute();

        $duration = 0;
        foreach ($currentDayEvents as $event) {
            $eventDate = new \DateTime($event->getDate()->format("Y-m-d H:i:s"));
            if (($eventDate < $currentDatetime) && ($currentDatetime < $eventDate->add(new \DateInterval('PT'.$event->getDuration().'M')))) {
                $duration = $event->getDuration();
            }
        }
        $currentDatetime->sub(new \DateInterval('PT'.$duration.'M'));

        // Second: look for current and next events
        $qb = $this->createQueryBuilder()
            ->field("display")->equals(true)
            ->field("date")->gte($currentDatetime)
            ->sort("date", 1);

        if ($limit) $qb->limit($limit);

        return $qb->getQuery()->execute();
    }
}